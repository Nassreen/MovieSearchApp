{"ast":null,"code":"var _jsxFileName = \"/Users/nasrn/Desktop/React/Movie-App-main/movie-app-github/src/context/auth-context.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContexValue = {\n  isAuth: false,\n  login: () => {}\n};\nexport const AuthContext = /*#__PURE__*/createContext(ContexValue);\n_c = AuthContext;\nconst AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuth: isLoggedIn,\n      login: loginHandler\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c2 = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useState","ContexValue","isAuth","login","AuthContext","AuthContextProvider","children","isLoggedIn","setIsLoggedIn","loginHandler"],"sources":["/Users/nasrn/Desktop/React/Movie-App-main/movie-app-github/src/context/auth-context.tsx"],"sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\ntype ProviderProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst ContexValue: {\r\n    isAuth: Boolean\r\n    login: Function\r\n} = {\r\n    isAuth: false,\r\n    login: () => {},\r\n}\r\n\r\nexport const AuthContext = createContext(ContexValue)\r\n\r\nconst AuthContextProvider = ({ children }: ProviderProps) => {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    const loginHandler = () => {\r\n        setIsLoggedIn(true)\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuth: isLoggedIn,\r\n                login: loginHandler\r\n            }}\r\n        >\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAMtD,MAAMC,WAGL,GAAG;EACAC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE,MAAM,CAAC;AAClB,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAACE,WAAW,CAAC;AAAA,KAAxCG,WAAW;AAExB,MAAMC,mBAAmB,GAAG,QAAiC;EAAA;EAAA,IAAhC;IAAEC;EAAwB,CAAC;EAEpD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,YAAY,GAAG,MAAM;IACvBD,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IACjB,KAAK,EAAE;MACHN,MAAM,EAAEK,UAAU;MAClBJ,KAAK,EAAEM;IACX,CAAE;IAAA,UAEAH;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAE/B,CAAC;AAAA,GAlBKD,mBAAmB;AAAA,MAAnBA,mBAAmB;AAoBzB,eAAeA,mBAAmB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}